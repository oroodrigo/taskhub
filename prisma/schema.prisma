// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Account {
  id                 String   @id @default(auto()) @map("_id") @db.ObjectId
  userId             String   @map("user_id")
  type               String
  provider           String
  providerAccountId  String   @map("provider_account_id")
  refresh_token      String?  @db.String
  access_token       String?  @db.String
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?  @db.String
  session_state      String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@map("accounts")
}

model User {
  id                 String   @id @default(cuid()) @map("_id") 
  name               String
  email              String   @unique
  hashedPassword     String? 
  emailVerified      DateTime?  @map("email_verified")
  image              String?
  accounts           Account[]
  tasks              Task[]
  role               Role @default(USER)

  createdAt          DateTime   @default(now()) @map("created_at")
  updatedAt          DateTime   @default(now()) @updatedAt @map("updated_at")

  @@map("users")
}

model Task {
  id                 String   @id @default(cuid()) @map("_id")  
  title              String
  description        String?
  isCompleted        Boolean  @default(false)
  isImportant        Boolean  @default(false)
  dateToComplete     DateTime

  createdAt          DateTime   @default(now()) @map("created_at")
  updatedAt          DateTime   @default(now()) @updatedAt @map("updated_at")

  user               User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId             String
  
  @@map("tasks")
}

enum Role {
  USER
  ADMIN
}